{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red242\green242\blue242;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c96078\c96078\c96078;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
# Feature extraction from text\
\
import pandas as pd\
from collections import Counter\
import matplotlib.pyplot as plt\
import numpy as np\
import csv\
\
chart = pd.read_csv('C:\\\\Users\\\\Administrator\\\\Desktop\\\\data.07.22.18\\\\fake.csv')\
\
stories=chart['text']\
authors=chart['author']\
\
#lines = stories[:15]\
#df = lines[1]\
\
\
df = stories[400]\
\
#len(df.split())\
\
##def word_count(str):\
##    counts = dict()\
##    words = df.split()\
##\
##    for word in words:\
##        if word in counts:\
##            counts[word] += 1\
##        else:\
##            counts[word] = 1\
###    print ( counts )        \
##    return counts\
\
\
def word_count(strings):\
    counts = \{\}\
    words = strings.split()\
\
    for word in words:\
        if word in counts:\
            counts[word] += 1\
        else:\
            counts[word] = 1\
#    print ( counts )        \
    return counts\
\
#print(word_count(stories[1]))\
#print('   ')\
#print(word_count(stories[2]))\
\
#print(str)\
#print( word_count(stories[400]) )\
#print( ' ' )\
\
#from collections import Counter\
#dic2=Counter(\{\})\
\
#print(word_count(stories[1]))\
#print('  ')\
#print(word_count(stories[2]))\
\
#print(Counter(word_count(stories[1])))\
#print(Counter(word_count(stories[2])))\
dic2=Counter(\{\})\
for i in range(0,5000,1):#len(stories),1):#len(stories),1)\
    dic1=Counter(word_count(str(stories[i])))\
    dic2=dic1+dic2\
    #dic2=dic1+dicold\
\
#print(dic2)\
\
#print ( df )\
\
print( ' ' )\
\
#df_count = word_count(df)\
\
df_series = pd.Series(dic2,name='dicnum')\
df_series.sort_values(ascending=False,inplace=True)\
print(df_series.head(10))\
\
df_series.to_csv('wordcountsfake5000.csv')\
}